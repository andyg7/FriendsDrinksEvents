apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: "kafka"
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: kafka
      annotations:
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: broker
        image: confluentinc/cp-kafka:7.3.1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JMX_PORT
          value: "5555"
        - name: KAFKA_HEAP_OPTS
          value: "-Xms512M -Xmx512M"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "false"
        ports:
        - name: inside
          containerPort: 9092
        - name: outside
          containerPort: 9094
        - name: jmx
          containerPort: 5555
        command:
          - sh
          - -exc
          - |
            export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
            export KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka.${POD_NAMESPACE}.svc.cluster.local:9092 && \
            exec /etc/confluent/docker/run
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            # This limit was intentionally set low as a reminder that
            # the entire Yolean/kubernetes-kafka is meant to be tweaked
            # before you run production workloads
            memory: 600Mi
        readinessProbe:
          tcpSocket:
            port: 9092
          timeoutSeconds: 2
          initialDelaySeconds: 60
        livenessProbe:
          tcpSocket:
            port: 9092
          timeoutSeconds: 2
          initialDelaySeconds: 60
        volumeMounts:
        - name: config
          mountPath: /etc/kafka
        - name: data
          mountPath: /var/lib/kafka
        - name: extensions
          mountPath: /opt/kafka/libs/extensions
      securityContext:
        runAsUser: 0
      volumes:
      - name: configmap
        configMap:
          name: broker-config
      - name: config
        emptyDir: {}
      - name: extensions
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
