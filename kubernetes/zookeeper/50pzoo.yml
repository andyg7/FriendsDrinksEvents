apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pzoo
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: zookeeper
      storage: persistent
  serviceName: "pzoo"
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: zookeeper
        storage: persistent
      annotations:
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.3.1
        env:
        - name : KAFKA_HEAP_OPTS
          value: '-Xms512M -Xmx512M'
        - name : KAFKA_OPTS
          value: '-Dzookeeper.4lw.commands.whitelist=ruok'
        - name : ZOOKEEPER_TICK_TIME
          value: '2000'
        - name : ZOOKEEPER_SYNC_LIMIT
          value: '5'
        - name : ZOOKEEPER_INIT_LIMIT
          value: '10'
        - name : ZOOKEEPER_MAX_CLIENT_CNXNS
          value: '60'
        - name: ZOOKEEPER_CLIENT_PORT
          value: '2181'
        - name : ZOOKEEPER_SERVERS
          value: 'pzoo-0.pzoo.kafka.svc.cluster.local:2888:3888;pzoo-1.pzoo.kafka.svc.cluster.local:2888:3888;pzoo-2.pzoo.kafka.svc.cluster.local:2888:3888'
        - name : ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT
          value: '3'
        - name : ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL
          value: '24'
        # ZOOKEEPER_SERVER_ID is required just to pass cp-zookeeper ensure script for env check,
        # the value(metadata.mame) is not used and will be overwritten in command part
        - name: ZOOKEEPER_SERVER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command:
          - "bash"
          - "-c"
          - |
            ZK_FIX_HOST_REGEX="s/${HOSTNAME}\.[^:]*:/0.0.0.0:/g"
            ZOOKEEPER_SERVER_ID=$((${HOSTNAME##*-}+1)) \
            ZOOKEEPER_SERVERS=`echo $ZOOKEEPER_SERVERS | sed -e "$ZK_FIX_HOST_REGEX"` \
            /etc/confluent/docker/run
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: peer
        - containerPort: 3888
          name: leader-election
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
          limits:
            memory: 120Mi
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - '[ "imok" = "$(echo ruok | nc -w 1 127.0.0.1 2181)" ]'
          timeoutSeconds: 5
          periodSeconds: 30
          initialDelaySeconds: 60
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - '[ "imok" = "$(echo ruok | nc -w 1 127.0.0.1 2181)" ]'
          timeoutSeconds: 5
          periodSeconds: 30
          initialDelaySeconds: 60
        volumeMounts:
        - name: config
          mountPath: /etc/kafka
        - name: datadir
          mountPath: /var/lib/zookeeper/data
        - name: datalogdir
          mountPath: /var/lib/zookeeper/log
      securityContext:
        runAsUser: 0
      volumes:
      - name: configmap
        configMap:
          name: zookeeper-config
      - name: config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: datalogdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
