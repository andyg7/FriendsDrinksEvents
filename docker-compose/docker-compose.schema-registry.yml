---
version: '2'

services:
  schema-registry:
    image: confluentinc/cp-schema-registry:7.7.1
    networks:
      - kafka-network
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:9092'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'


  # This "container" is a workaround to pre-create topics
  kafka-setup:
    image: confluentinc/cp-kafka:7.7.1
    networks:
      - kafka-network
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - schema-registry
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       sleep 90 && \
                       cub kafka-ready -b broker:9092 1 20 && \
                       echo About to create topics... && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic frontend-responses && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-meetup-event && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-meetup-state && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-event && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-state && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-keyed-by-admin-user-id-state && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-membership-event && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-membership-state && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-membership-keyed-by-friendsdrinks-id-state && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-membership-keyed-by-user-id-state && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-api && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-invitation-event && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic friendsdrinks-invitation-state && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic user-event && \
                       kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 2 --replication-factor 1 --topic user-state && \
                       echo Done creating topics...  \
                       '"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored


networks:
  kafka-network:
    external: true
    name: kafka_default
